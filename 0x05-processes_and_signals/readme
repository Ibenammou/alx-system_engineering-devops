# 0x05. Processes and signals

## Overview
This project involves working with processes and signals in the context of shell scripting and system programming. The tasks cover a range of topics including understanding PIDs, managing processes, handling signals, and creating an init script to manage a background process.

## Tasks

### Task 0: What is my PID
Write a Bash script that displays its own PID.

### Task 1: List your processes
Write a Bash script that displays a list of currently running processes. The script should show all processes, for all users, including those without a TTY. It should display the information in a user-oriented format, showing the process hierarchy.

### Task 2: Show your Bash PID
Write a Bash script that displays lines containing the word "bash" in the output of the previous script, allowing you to easily get the PID of your Bash process.

...

### Task 11: Zombie
Write a C program (`102-zombie.c`) that creates 5 zombie processes. The program should display "Zombie process created, PID: ZOMBIE_PID" for each zombie process.

## Additional Information
- The scripts and programs should follow specific requirements outlined in the project description, such as using the correct shebang, passing Shellcheck, and having appropriate comments.
- For Task 11, the code should use the Betty style. The `infinite_while` function is provided for you to use.

## Copyright
Â© 2023 ALX. All rights reserved. No content from this project should be published or shared without permission. Plagiarism is strictly forbidden and will result in removal from the program.

